@model ABCRetailers.Models.Order

@{
    ViewData["Title"] = "Edit Order";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-8">
            <div class="card">
                <div class="card-header">
                    <h3><i class="fas fa-edit me-2"></i>Edit Order</h3>
                    <small class="text-muted">Order ID: @Model.OrderId</small>
                </div>
                <div class="card-body">
                    <form asp-action="Edit" method="post">
                        @Html.AntiForgeryToken()
                        <input type="hidden" asp-for="OrderId" />
                        <input type="hidden" asp-for="CustomerId" />
                        <input type="hidden" asp-for="ProductId" />
                        <input type="hidden" asp-for="Username" />
                        <input type="hidden" asp-for="ProductName" />
                        <input type="hidden" asp-for="UnitPrice" />
                        <input type="hidden" asp-for="TotalPrice" />
                        <input type="hidden" asp-for="Quantity" />
                        <input type="hidden" asp-for="OrderDate" />

                        @* Add ETag as hidden field if it exists *@
                        @if (Model.ETag != null)
                        {
                            <input type="hidden" name="ETag" value="@Model.ETag" />
                        }

                        @* Add Timestamp as hidden field if it exists *@
                        @if (Model.Timestamp != null)
                        {
                            <input type="hidden" name="Timestamp" value="@Model.Timestamp" />
                        }

                        <div asp-validation-summary="ModelOnly" class="alert alert-danger" role="alert"></div>

                        <!-- Read-only Order Information -->
                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">
                                    <i class="fas fa-user me-1"></i>Customer
                                </label>
                                <input type="text" class="form-control" value="@Model.Username" readonly />
                                <small class="text-muted">Customer ID: @Model.CustomerId</small>
                            </div>

                            <div class="col-md-6 mb-3">
                                <label class="form-label">
                                    <i class="fas fa-box me-1"></i>Product
                                </label>
                                <input type="text" class="form-control" value="@Model.ProductName" readonly />
                                <small class="text-muted">Product ID: @Model.ProductId</small>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-3 mb-3">
                                <label class="form-label">
                                    <i class="fas fa-calendar me-1"></i>Order Date
                                </label>
                                <input type="text" class="form-control" value="@Model.OrderDate.ToString("MM/dd/yyyy")" readonly />
                            </div>

                            <div class="col-md-3 mb-3">
                                <label class="form-label">
                                    <i class="fas fa-calculator me-1"></i>Quantity
                                </label>
                                <input type="text" class="form-control" value="@Model.Quantity" readonly />
                            </div>

                            <div class="col-md-3 mb-3">
                                <label class="form-label">
                                    <i class="fas fa-dollar-sign me-1"></i>Unit Price
                                </label>
                                <input type="text" class="form-control" value="@Model.UnitPrice.ToString("C")" readonly />
                            </div>

                            <div class="col-md-3 mb-3">
                                <label class="form-label">
                                    <i class="fas fa-receipt me-1"></i>Total Price
                                </label>
                                <input type="text" class="form-control fw-bold" value="@Model.TotalPrice.ToString("C")" readonly />
                            </div>
                        </div>

                        <!-- Editable Status Field -->
                        <div class="row">
                            <div class="col-md-6 mb-4">
                                <label asp-for="Status" class="form-label">
                                    <i class="fas fa-flag me-1"></i>Order Status *
                                </label>
                                <select asp-for="Status" class="form-select" id="statusSelect" required>
                                    <option value="Pending" selected="@(Model.Status == "Pending")">
                                        <i class="fas fa-clock"></i> Pending
                                    </option>
                                    <option value="Processing" selected="@(Model.Status == "Processing")">
                                        <i class="fas fa-cog"></i> Processing
                                    </option>
                                    <option value="Completed" selected="@(Model.Status == "Completed")">
                                        <i class="fas fa-check"></i> Completed
                                    </option>
                                    <option value="Cancelled" selected="@(Model.Status == "Cancelled")">
                                        <i class="fas fa-times"></i> Cancelled
                                    </option>
                                </select>
                                <span asp-validation-for="Status" class="text-danger"></span>
                                <div class="form-text">
                                    <i class="fas fa-info-circle me-1"></i>
                                    Update the order status to reflect current processing state.
                                </div>
                            </div>

                            <div class="col-md-6 mb-4">
                                <label class="form-label">Current Status</label>
                                <div class="mt-2">
                                    @switch (Model.Status?.ToLower())
                                    {
                                        case "pending":
                                            <span class="badge bg-warning text-dark fs-6">
                                                <i class="fas fa-clock me-1"></i>Pending
                                            </span>
                                            break;
                                        case "processing":
                                            <span class="badge bg-info fs-6">
                                                <i class="fas fa-cog me-1"></i>Processing
                                            </span>
                                            break;
                                        case "completed":
                                            <span class="badge bg-success fs-6">
                                                <i class="fas fa-check me-1"></i>Completed
                                            </span>
                                            break;
                                        case "cancelled":
                                            <span class="badge bg-danger fs-6">
                                                <i class="fas fa-times me-1"></i>Cancelled
                                            </span>
                                            break;
                                        default:
                                            <span class="badge bg-secondary fs-6">@Model.Status</span>
                                            break;
                                    }
                                </div>
                                <div class="form-text text-muted mt-2">
                                    Status helps track order progress
                                </div>
                            </div>
                        </div>

                        <!-- Action Buttons -->
                        <hr>
                        <div class="d-flex gap-2">
                            <button type="submit" class="btn btn-primary" id="updateBtn">
                                <i class="fas fa-save me-1"></i>Update Order
                            </button>
                            <a asp-action="Details" asp-route-id="@Model.OrderId" class="btn btn-outline-info">
                                <i class="fas fa-eye me-1"></i>View Details
                            </a>
                            <a asp-action="Index" class="btn btn-secondary">
                                <i class="fas fa-arrow-left me-1"></i>Back to Orders
                            </a>
                        </div>
                    </form>
                </div>
            </div>
        </div>

        <!-- Order Summary Sidebar -->
        <div class="col-lg-4">
            <div class="card">
                <div class="card-header">
                    <h5><i class="fas fa-receipt me-2"></i>Order Summary</h5>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <strong><i class="fas fa-user me-2 text-primary"></i>Customer Information</strong>
                        <div class="text-muted mt-1">@Model.Username</div>
                        <small class="text-muted">ID: @Model.CustomerId</small>
                    </div>

                    <div class="mb-3">
                        <strong><i class="fas fa-box me-2 text-success"></i>Product Information</strong>
                        <div class="text-muted mt-1">@Model.ProductName</div>
                        <small class="text-muted">ID: @Model.ProductId</small>
                    </div>

                    <hr>

                    <div class="row mb-2">
                        <div class="col">Order Date:</div>
                        <div class="col text-end">@Model.OrderDate.ToString("MM/dd/yyyy")</div>
                    </div>

                    <div class="row mb-2">
                        <div class="col">Quantity:</div>
                        <div class="col text-end">@Model.Quantity</div>
                    </div>

                    <div class="row mb-2">
                        <div class="col">Unit Price:</div>
                        <div class="col text-end">@Model.UnitPrice.ToString("C")</div>
                    </div>

                    <hr>

                    <div class="row">
                        <div class="col"><strong>Total Amount:</strong></div>
                        <div class="col text-end">
                            <strong class="text-success fs-5">@Model.TotalPrice.ToString("C")</strong>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Status History Card -->
            <div class="card mt-3">
                <div class="card-header">
                    <h6><i class="fas fa-history me-2"></i>Status Information</h6>
                </div>
                <div class="card-body">
                    <div class="mb-3">
                        <label class="form-label small text-muted">CURRENT STATUS</label>
                        <div>
                            @switch (Model.Status?.ToLower())
                            {
                                case "pending":
                                    <span class="badge bg-warning text-dark">
                                        <i class="fas fa-clock me-1"></i>Pending
                                    </span>
                                    <div class="small text-muted mt-1">Order is waiting for processing</div>
                                    break;
                                case "processing":
                                    <span class="badge bg-info">
                                        <i class="fas fa-cog me-1"></i>Processing
                                    </span>
                                    <div class="small text-muted mt-1">Order is being prepared</div>
                                    break;
                                case "completed":
                                    <span class="badge bg-success">
                                        <i class="fas fa-check me-1"></i>Completed
                                    </span>
                                    <div class="small text-muted mt-1">Order has been fulfilled</div>
                                    break;
                                case "cancelled":
                                    <span class="badge bg-danger">
                                        <i class="fas fa-times me-1"></i>Cancelled
                                    </span>
                                    <div class="small text-muted mt-1">Order has been cancelled</div>
                                    break;
                                default:
                                    <span class="badge bg-secondary">@Model.Status</span>
                                    break;
                            }
                        </div>
                    </div>

                    <div class="alert alert-info">
                        <i class="fas fa-lightbulb me-1"></i>
                        <strong>Note:</strong> Only the order status can be updated. Other order details are read-only for data integrity.
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const statusSelect = document.getElementById('statusSelect');
            const updateBtn = document.getElementById('updateBtn');
            const originalStatus = '@Model.Status';

            // Track changes to enable/disable update button
            statusSelect.addEventListener('change', function() {
                if (this.value !== originalStatus) {
                    updateBtn.classList.remove('btn-primary');
                    updateBtn.classList.add('btn-warning');
                    updateBtn.innerHTML = '<i class="fas fa-exclamation-triangle me-1"></i>Save Changes';
                } else {
                    updateBtn.classList.remove('btn-warning');
                    updateBtn.classList.add('btn-primary');
                    updateBtn.innerHTML = '<i class="fas fa-save me-1"></i>Update Order';
                }
            });

            // Add confirmation for certain status changes
            document.querySelector('form').addEventListener('submit', function(e) {
                const newStatus = statusSelect.value.toLowerCase();
                const oldStatus = originalStatus.toLowerCase();

                if (oldStatus === 'completed' && newStatus !== 'completed') {
                    if (!confirm('Are you sure you want to change the status from Completed? This action should be carefully considered.')) {
                        e.preventDefault();
                        return false;
                    }
                }

                if (newStatus === 'cancelled' && oldStatus !== 'cancelled') {
                    if (!confirm('Are you sure you want to cancel this order? This action may have business implications.')) {
                        e.preventDefault();
                        return false;
                    }
                }
            });
        });
    </script>
}